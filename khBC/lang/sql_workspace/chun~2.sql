    -- BS 
    --1. o
    select DEPARTMENT_NAME 학과, CATEGORY 계열 FROM CHUN.TB_DEPARTMENT;
    
    
    --2. - 해결해야함.
    
    SELECT DEPARTMENT_NAME || '의 정원은 ' || COUNT(*)|| '명 입니다.' AS "학과별 정원"
    FROM CHUN.TB_STUDENT S
    LEFT JOIN CHUN.TB_DEPARTMENT D USING (DEPARTMENT_NO)
    GROUP BY D.DEPARTMENT_NAME;
    
    --3. o
    
    SELECT STUDENT_NAME 이름
    FROM CHUN.TB_STUDENT S
    WHERE STUDENT_NO IN ('A513079','A513090','A513091','A513110',
    'A513119')
    ORDER BY STUDENT_NAME DESC
    ;
    
    --4. o
    SELECT DEPARTMENT_NAME 학과, CATEGORY 계열
    FROM CHUN.TB_DEPARTMENT
    WHERE CAPACITY BETWEEN 20 AND 30;

    --5. o
    SELECT PROFESSOR_NAME 이름
    FROM CHUN.TB_PROFESSOR
    WHERE DEPARTMENT_NO IS NULL;
    
    --6.
    SELECT PREATTENDING_CLASS_NO
    FROM CHUN.TB_CLASS
    WHERE PREATTENDING_CLASS_NO IS NOT NULL;
    
    --7.
    SELECT DISTINCT CATEGORY 계열
    FROM CHUN.TB_DEPARTMENT;
    
    
    
    -- FUNCTION SELECT
    --1.
    SELECT 
    STUDENT_NO 학번, STUDENT_NAME 이름, ENTRANCE_DATE 입학년도
    FROM CHUN.TB_STUDENT
    WHERE DEPARTMENT_NO = 002
    ORDER BY STUDENT_NAME ASC;
    
    --2.
    SELECT
    PROFESSOR_NAME 교수이름,
    PROFESSOR_SSN 주민번호
    FROM CHUN.TB_PROFESSOR
    WHERE PROFESSOR_NAME NOT LIKE '___';
    
    --3.
    SELECT
    PROFESSOR_NAME 교수이름,
   EXTRACT(YEAR FROM SYSDATE) - (SUBSTR(PROFESSOR_SSN, 1, 2) +1900) 나이
    FROM CHUN.TB_PROFESSOR
    ORDER BY 나이 ASC;
    
    --4.
    SELECT
    SUBSTR(PROFESSOR_NAME, 2) 이름
    FROM CHUN.TB_PROFESSOR;
    
    --5. X
    SELECT
    STUDENT_NO 학번,
    STUDENT_NAME  이름
   
    FROM CHUN.TB_STUDENT
    WHERE ENTRANCE_DATE - TO_DATE(SUBSTR(STUDENT_SSN, 1, 6), 'RRMMDD') > 20 * 365;
    
    --6.
    SELECT
    TO_CHAR(TO_DATE(20201225, 'RRMMDD'), 'DAY')
    FROM DUAL;
    
    --7.
    SELECT
    STUDENT_NO 학번,
    STUDENT_NAME 이름
    FROM CHUN.TB_STUDENT
    WHERE STUDENT_NO NOT LIKE 'A%'
    ;
    
    --8.
    SELECT
    STUDENT_NO 학번,
    STUDENT_NAME 이름,
    STUDENT_SSN 주민번호
    FROM CHUN.TB_STUDENT
    WHERE STUDENT_NO LIKE 'A2%' AND
    STUDENT_ADDRESS LIKE '전주%'
    ;
    
   --9.
   SELECT
   ROUND(AVG(G.POINT),1) 학점
   FROM CHUN.TB_STUDENT S
   JOIN CHUN.TB_GRADE G USING (STUDENT_NO)
   WHERE STUDENT_NO = 'A517178'
   ;
   
   --10.
   
   SELECT DEPARTMENT_NO 학과번호,
   COUNT(*)
   FROM CHUN.TB_STUDENT 
   JOIN CHUN.TB_DEPARTMENT  USING (DEPARTMENT_NO)
   GROUP BY DEPARTMENT_NO
   ORDER BY DEPARTMENT_NO ASC;
   
   --11.
   SELECT COUNT(*) 학생수
   FROM CHUN.TB_STUDENT
   WHERE COACH_PROFESSOR_NO IS NULL;
   
   --12. x
   
   SELECT 
   TERM_NO,
   ROUND((SELECT AVG(POINT) FROM CHUN.TB_GRADE WHERE TERM_NO LIKE '2001%'),1)
   FROM CHUN.TB_STUDENT
   JOIN CHUN.TB_GRADE USING (STUDENT_NO)
   WHERE STUDENT_NO = 'A112113'
   
   ;
   --13.
   SELECT
   DEPARTMENT_NO 학과코드명,
   COUNT(*) 휴학생수
   FROM CHUN.TB_STUDENT
   LEFT JOIN CHUN.TB_DEPARTMENT  USING (DEPARTMENT_NO)
   WHERE ABSENCE_YN = 'Y'
   GROUP BY DEPARTMENT_NO
   ORDER BY DEPARTMENT_NO ASC
   ;
   
   --14.
   SELECT
    STUDENT_NAME 이름,
   COUNT(*)
   FROM CHUN.TB_STUDENT 
   GROUP BY STUDENT_NAME
   HAVING COUNT(*) > 1
   ;
    
    
    --1.
    SELECT
    STUDENT_NAME AS "학생 이름",
    STUDENT_ADDRESS AS "주소지"
    FROM CHUN.TB_STUDENT
    ORDER BY STUDENT_NAME ASC;
    
    --2.
    SELECT
    STUDENT_NAME 이름,
    STUDENT_SSN 주민번호
    FROM CHUN.TB_STUDENT
    WHERE ABSENCE_YN = 'Y'
    ORDER BY SUBSTR(STUDENT_SSN, 1, 2) DESC;
    
    --3.
    SELECT
    STUDENT_NAME 학생이름,
    STUDENT_NO 학번,
    STUDENT_ADDRESS 주소
    FROM CHUN.TB_STUDENT
    WHERE (STUDENT_ADDRESS LIKE '강원도%' OR STUDENT_ADDRESS LIKE '경기도%')
    AND STUDENT_NO LIKE '9%'
    ;
    
    --4.
    SELECT
    PROFESSOR_NAME 교수이름,
    PROFESSOR_SSN 주민번호
    FROM CHUN.TB_PROFESSOR
    JOIN CHUN.TB_DEPARTMENT USING (DEPARTMENT_NO)
    WHERE DEPARTMENT_NAME = '법학과'
    ORDER BY SUBSTR(PROFESSOR_SSN,1,2) ASC;
    
    --5.
    SELECT
    STUDENT_NO 학번,
    POINT 점수
    FROM CHUN.TB_STUDENT
    JOIN CHUN.TB_GRADE USING (STUDENT_NO)
    WHERE TERM_NO = '200402'
    AND CLASS_NO = 'C3118100'
    ORDER BY POINT DESC;
    
    --6.
    SELECT
    STUDENT_NO 학번,
    STUDENT_NAME 이름,
    DEPARTMENT_NAME 학과
    FROM CHUN.TB_STUDENT
    JOIN CHUN.TB_DEPARTMENT USING (DEPARTMENT_NO)
    ORDER BY STUDENT_NAME ASC;
    
    --7.
    SELECT
    CLASS_NAME 과목명,
    DEPARTMENT_NAME 학과이름
    FROM CHUN.TB_CLASS
    JOIN CHUN.TB_DEPARTMENT USING (DEPARTMENT_NO)
    ;
    
    --8. 검사.
    SELECT
    CLASS_NAME 과목명,
    PROFESSOR_NAME 교수명
    FROM CHUN.TB_CLASS
    JOIN CHUN.TB_PROFESSOR USING (DEPARTMENT_NO)
    JOIN CHUN.TB_CLASS_PROFESSOR USING (CLASS_NO)
    ;
    
    --9.
    SELECT
    CLASS_NAME 과목명,
    PROFESSOR_NAME 교수명
    FROM CHUN.TB_CLASS
    JOIN CHUN.TB_DEPARTMENT USING (DEPARTMENT_NO)
    JOIN CHUN.TB_PROFESSOR USING (DEPARTMENT_NO)
    WHERE CATEGORY = '인문사회'
    ;
    
    --10.
    SELECT
    STUDENT_NO 학번, STUDENT_NAME 이름,
    (SELECT AVG(POINT) FROM TB_GRADE GROUP BY STUDENT_NO)
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    WHERE DEPARTMENT_NAME = '음악학과'
    GROUP BY STUDENT_NO, STUDENT_NAME
    
    ;